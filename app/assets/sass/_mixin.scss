@import "functions.scss";
[ng\:cloak],
[ng-cloak],
[data-ng-cloak],
[x-ng-cloak],
.ng-cloak,
.x-ng-cloak,
.ng-hide {
    display: none !important;
}

@mixin full-width {
    float: left;
    width: 100%;
}

@mixin page-center($size) {
    max-width: $size + px;
    margin-left: auto;
    margin-right: auto;
}

@mixin clearfix {
    display: inline-block;
    &:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
}

@mixin linear-gradient($direction, $color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}

@mixin border-radius($size) {
    -webkit-border-radius: $size;
    -moz-border-radius: $size;
    border-radius: $size;
}

// Opacity
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

// colors -- background, border, text-color 
@mixin colors($text, $background, $border) {
    color: $text;
    background-color: $background;
    border-color: $border;
}

// Transition
@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
    -moz-transform: translate3d($x, $y, $z);
    -o-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}

// Animation
@mixin animation($transition-property, $transition-time, $method) {
    -webkit-animation: $transition-property $transition-time $method;
    -moz-animation: $transition-property $transition-time $method;
    -ms-animation: $transition-property $transition-time $method;
    -o-animation: $transition-property $transition-time $method;
    animation: $transition-property $transition-time $method;
}

// border-box
@mixin border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

// Box shadow
@mixin box-shadow($shadows...) {
    -moz-box-shadow: $shadows;
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
}


@mixin font( $name, $src, $hash ) {
  @font-face {
    font-family: $name;
    src: url('../fonts/' + $src + '.eot');
    src: url('../fonts/' + $src + '.eot?#iefix') format('embedded-opentype'),
         url('../fonts/' + $src + '.woff') format('woff'),
         url('../fonts/' + $src + '.ttf') format('truetype'),
         url('../fonts/' + $src + '.svg#' + $hash ) format('svg');
    font-weight:normal;
    font-style:normal;
  }
}